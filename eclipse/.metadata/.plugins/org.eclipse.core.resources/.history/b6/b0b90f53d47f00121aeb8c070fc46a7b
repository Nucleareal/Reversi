package Model;

public class Position
{
	private int _x;
	private int _y;
	private Orientation _orient;

	public Position(int x, int y)
	{
		this(x, y, Orientation.Undef);
	}

	public Position(int x, int y, Orientation orient)
	{
		_x = x;
		_y = y;
		_orient = orient;
	}

	public Position getNext()
	{
		Position pos = new Position(_x+_orient.getVectorX(), _y+_orient.getVectorY(), _orient);
		if(equals(pos)) return null;
		return pos;
	}

	public Position reverse()
	{
		switch(_orient)
		{
		case XNegYNut: _orient = Orientation.XPosYNut;
		case XNegYNeg: _orient = Orientation.XPosYNut;
		case XNutYNeg: _orient = Orientation.XPosYNut;
		case XPosYNeg: _orient = Orientation.XPosYNut;
		case XPosYNut: _orient = Orientation.XPosYNut;
		case XPosYPos: _orient = Orientation.XPosYNut;
		case XNutYPos: _orient = Orientation.XPosYNut;
		case XNegYPos: _orient = Orientation.XPosYNut;
		}
		return this;
	}

	public int getX()
	{
		return _x;
	}

	public int getY()
	{
		return _y;
	}

	public Orientation getOrientation()
	{
		return _orient;
	}

	public boolean equals(Position p)
	{
		return _x == p.getX() && _y == p.getY() && p.getOrientation().equals(_orient);
	}
}
